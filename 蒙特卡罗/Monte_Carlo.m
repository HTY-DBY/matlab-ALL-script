% 渡边笔记
% Monte_Carlo 是一种方法的概述，不是什么特定的算法
% 主要思想是利用大量随机数来实现真实值的拟合
%% 例1 计算 0-3 上 x^2 的积分，正解应该是 9
N=500; x=unifrnd(0,3,N,1); % 设定随机数及其终止上限
M = mean(3*x.^2);disp(['M = ',num2str(M)]); % 将随机数代入原式求平均值，特别的，蒙特卡洛需要式乘以积分区间,下同
%% 例2 求相交面积
%给定曲线y =2 – x2 和曲线y3 = x2，曲线的交点为：P1(–1，1)、P2(1，1),函数图像如下
x_1 = -1.5:.1:1.5; y_1 = 2 - x_1.^2;
x_2 = -2:.1:2; y_2 = x_2.^2.^(1/3);
subplot(1,2,1); plot(x_1,y_1,'r',x_2,y_2,'b') %曲线围成平面有限区域，用蒙特卡罗方法计算区域面积。
P=rand(1000,2); %随机产生1000个点
%定义x y 的范围
x=2*P(:,1)-1; % 这一步是巧妙设置在(-1,2)
y=2*P(:,2);
II=find(y<=2-x.^2&y.^3>=x.^2); %找出在函数范围的数
%计算索引的长度
M=length(II);
%计算面积
S = 4*M/1000;disp(['S = ',num2str(S)]);
subplot(1,2,2); plot(x(II),y(II),'g.');
close all % 删除这个就可以显示图像
%% 例3 求圆周率
n = 1000;  %总的实验次数  
m = 0;  %落在圆中点的次数 
%循环实验  
for i = 1:n  
    x = 2 * rand - 1;
    y = 2 * rand - 1;
    if (x^2 + y^2 <= 1) 
        m = m + 1;  
    end  
end   
PI=4*m/n; disp(['PI = ',num2str(PI)]);